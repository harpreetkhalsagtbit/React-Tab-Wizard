{"version":3,"sources":["Wizard/index.js","Commons/Button/index.js","App.js","serviceWorker.js","index.js"],"names":["Steps","_React$PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeStepIndex","formData","0","isValid","1","2","3","show","bind","assertThisInitialized","next","previous","update","children","React","Children","toArray","inherits","createClass","key","value","step","index","_this2","setState","console","log","_this3","steps","length","_this4","stepIndex","data","prevState","prevProps","assign","_this5","react_default","a","createElement","className","map","element","react","header","objectSpread","isActive","render","PureComponent","Step","_ref2","objectWithoutProperties","Wizard","_ref","Button","type","App","src_Wizard","Wizard_Steps","title","src_Commons_Button","disabled","onClick","_ref3","Wizard_Step","_ref4","_ref5","_ref6","_ref7","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eee5a0bd.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst Wizard = ({ children }) => {\n  return children;\n};\n\n/**\n * Keep track for each Step\n * Each step will inform whether next operation can be performed or not\n * Each step will have its own local state\n * Wizard perform operation base on the validation of local state of active step\n * By default all steps would be disabled or invalid as only previous step state\n * will determine the next operation to be followed\n */\nexport class Steps extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeStepIndex: 0,\n      formData: {\n        0:{\n          isValid: true\n        },\n        1:{\n          isValid: true\n        },\n        2:{\n          isValid: true\n        },\n        3:{\n          isValid: true\n        }\n\n      }\n    };\n    this.show = this.show.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.update = this.update.bind(this);\n    this.children = React.Children.toArray(this.props.children);\n  }\n  show(step, index) {\n    return () => {\n      if (\n        this.state.formData[this.state.activeStepIndex] &&\n        this.state.formData[this.state.activeStepIndex].isValid\n      ) {\n        this.setState(\n          {\n            activeStepIndex: index\n            //   activeStep:this.props.children[index]\n          },\n          () => {\n            console.log(\"click called\", this.state.activeStepIndex, index);\n          }\n        );\n      } else {\n        console.log(\"No show\");\n      }\n    };\n  }\n  next(index, isValid) {\n    const steps = this.children;\n    return () => {\n      if (this.state.formData[this.state.activeStepIndex]) {\n        if (index + 1 < steps.length) {\n          this.setState(\n            {\n              activeStepIndex: index + 1\n            },\n            () => {\n              console.log(\"click called\", this.state.activeStepIndex, index);\n            }\n          );\n        }\n      } else {\n        console.log(\"no Next\");\n      }\n    };\n  }\n  previous(index) {\n    return () => {\n      if (index - 1 >= 0) {\n        this.setState(\n          {\n            activeStepIndex: index - 1\n          },\n          () => {\n            console.log(\"click called\", this.state.activeStepIndex, index);\n          }\n        );\n      }\n    };\n  }\n  update(stepIndex, data) {\n    if (stepIndex != null) {\n      this.setState((prevState, prevProps) => {\n        prevState.formData[stepIndex] = data;\n        return {\n          formData: Object.assign({}, prevState.formData)\n        };\n      });\n    } else {\n      this.setState((prevState, prevProps) => {\n        return {\n          activeStepIndex: data.activeStepIndex\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"wizard\">\n        <div className=\"wizard-header\">\n          {this.children.map((element, index) => {\n            return (\n              <Fragment key={index}>\n                {this.props.header({\n                  ...element.props,\n                  isActive: index === this.state.activeStepIndex ? true : false,\n                  show: this.show(element, index, this.state.isValid),\n                  isValid:\n                    (this.state.formData[index] &&\n                      this.state.formData[index].isValid) ||\n                    (this.state.formData[index - 1] &&\n                      this.state.formData[index - 1] &&\n                      this.state.formData[index - 1].isValid) ||\n                    false\n                })}\n              </Fragment>\n            );\n          })}\n        </div>\n        <div className=\"wizard-body\">\n          {this.children[this.state.activeStepIndex].props.render({\n            update: this.update,\n            data: this.state.formData || {}\n          })}\n        </div>\n        <div className=\"wizard-footer\">\n          {this.props.previous({\n            previous: this.previous(this.state.activeStepIndex)\n          })}\n          {this.props.next({\n            next: this.next(this.state.activeStepIndex),\n            isValid:\n              this.state.formData[this.state.activeStepIndex] &&\n              this.state.formData[this.state.activeStepIndex].isValid\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Step = ({ children, ...props }) => {\n  return children;\n};\n\nexport default Wizard;\n","import React from \"react\";\nimport './index.css'\n\nconst Button = ({className, ...props}) => {\n    return <button className={className} type=\"button\" {...props}>{props.children}</button>\n}\nexport default Button;\n","import React, { Fragment } from 'react';\nimport Wizard, { Steps, Step } from \"./Wizard\";\n\nimport Button from \"./Commons/Button\";\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Fragment>\n                <div className=\"wizard-container\">\n                    <Wizard>\n                        <Steps\n                            header={({ title, show, isActive, isValid }) => {\n                                return (\n                                    <Button\n                                        disabled={!isActive && !isValid}\n                                        className={\n                                            \"nav-buttons btn-primary btn-large \" +\n                                            (isActive\n                                                ? \"isActive\"\n                                                : \"\" + (!isValid ? \"nav-disabled\" : \"\"))\n                                        }\n                                        onClick={show}\n                                    >\n                                        {title}\n                                    </Button>\n                                );\n                            }}\n                            next={({ next, isValid }) => {\n                                return (\n                                    <Button\n                                        disabled={!isValid}\n                                        className={\n                                            \"btn btn-primary btn-large\" +\n                                            (!isValid ? \" btn-disabled\" : \"\")\n                                        }\n                                        onClick={next}\n                                    >\n                                        Next\n                                    </Button>\n                                );\n                            }}\n                            previous={({ previous }) => {\n                                return (\n                                    <Button\n                                        className=\"btn btn-primary btn-large\"\n                                        onClick={previous}\n                                    >\n                                        Previous\n                                    </Button>\n                                );\n                            }}\n                        >\n                            <Step\n                                title={\"Upload file(s)\"}\n                                render={({ update, data }) => {\n                                    // return <UploadForm update={update} data={data} entities={this.props.entities.entities} listEntityValue={this.props.listEntityValue}/>;\n                                    return <div>Upload Form</div>\n                                }}\n                            />\n                            <Step\n                                title={\"Common Fields\"}\n                                render={({ update, data }) => {\n                                    // return <CommonForm update={update} data={data}/>;\n                                    return <div>Common Form</div>\n                                }}\n                            />\n                            <Step\n                                title={\"Individual Forms\"}\n                                render={({ update, data }) => {\n                                    // return <IndividualForms update={update} data={data} />;\n                                    return <div>Individual</div>\n                                }}\n                            />\n                            <Step\n                                title={\"Generate\"}\n                                render={({ update, data }) => {\n                                    // return <Generate update={update} data={data} />;\n                                    return <div>Generate Form</div>\n                                }}\n                            />\n                        </Steps>\n                    </Wizard>\n                </div>\n            </Fragment>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}